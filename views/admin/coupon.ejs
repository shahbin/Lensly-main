<%- include("../../views/partials/admin/header") %>
<style>
/* Modern Admin Dashboard Styles */
:root {
  --primary-color: #4361ee;
  --danger-color: #ef476f;
  --success-color: #06d6a0;
  --background-color: #f8f9fa;
  --text-color: #2d3748;
  --border-color: #e2e8f0;
  --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Layout & Container Styles */
.content-main {
  padding: 2rem;
  background-color: var(--background-color);
  min-height: 100vh;
}

.content-title {
  color: var(--text-color);
  font-size: 1.875rem;
  font-weight: 600;
  margin-bottom: 1.5rem;
}

.card {
  background: white;
  border-radius: 1rem;
  box-shadow: var(--card-shadow);
  border: none;
  margin-bottom: 2rem;
}

.card-body {
  padding: 2rem;
}

/* Form Styles */
.col-md-3 {
  background: white;
  padding: 2rem;
  border-radius: 1rem;
  box-shadow: var(--card-shadow);
}

.form-label {
  font-weight: 600;
  color: var(--text-color);
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
}

.form-control {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  margin-bottom: 1.5rem;
  font-size: 0.875rem;
  transition: all 0.2s ease;
}

.form-control:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
  outline: none;
}

.form-control::placeholder {
  color: #a0aec0;
}

/* Button Styles */
.btn {
  font-weight: 600;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  transition: all 0.2s ease;
  font-size: 0.875rem;
}

.btn-primary {
  background-color: var(--primary-color);
  border: none;
  color: white;
}

.btn-primary:hover {
  background-color: #3651d1;
  transform: translateY(-1px);
}

.btn-danger {
  background-color: var(--danger-color);
  border: none;
}

.btn-danger:hover {
  background-color: #dc3545;
}

.btn-sm {
  padding: 0.5rem 1rem;
  font-size: 0.75rem;
}

/* Table Styles */
.table-responsive {
  border-radius: 1rem;
  box-shadow: var(--card-shadow);
  background: white;
}

.table {
  margin-bottom: 0;
}

.table thead th {
  background: #f8fafc;
  padding: 1rem;
  font-weight: 600;
  color: var(--text-color);
  border-bottom: 2px solid var(--border-color);
  font-size: 0.875rem;
}

.table tbody td {
  padding: 1rem;
  vertical-align: middle;
  color: var(--text-color);
  border-bottom: 1px solid var(--border-color);
  font-size: 0.875rem;
}

/* Error Message Styles */
.error-message {
  color: var(--danger-color);
  font-size: 0.75rem;
  margin-top: -1rem;
  margin-bottom: 1rem;
}

/* Layout Improvements */
.col-md-7.ml-105 {
  margin-left: 2rem;
}

/* Action Buttons in Table */
.table .btn {
  margin: 0.25rem;
  min-width: 80px;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .content-main {
    padding: 1rem;
  }
  
  .col-md-7.ml-105 {
    margin-left: 0;
    margin-top: 1.5rem;
  }
  
  .card-body {
    padding: 1rem;
  }
  
  .table-responsive {
    margin-top: 1rem;
  }
  
  .table thead th,
  .table tbody td {
    padding: 0.75rem;
  }
}

/* Status Badge Styles */
.badge {
  padding: 0.35em 0.65em;
  font-size: 0.75em;
  font-weight: 600;
  border-radius: 0.25rem;
}

.badge-success {
  background-color: var(--success-color);
  color: white;
}

.badge-danger {
  background-color: var(--danger-color);
  color: white;
}

/* Form Grid Layout */
.form-grid {
  display: grid;
  gap: 1.5rem;
}

/* Animation for Hover States */
.table tbody tr {
  transition: background-color 0.2s ease;
}

.table tbody tr:hover {
  background-color: #f8fafc;
}

/* Custom Scrollbar */
.table-responsive::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.table-responsive::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.table-responsive::-webkit-scrollbar-thumb {
  background: #cbd5e0;
  border-radius: 4px;
}

.table-responsive::-webkit-scrollbar-thumb:hover {
  background: #a0aec0;
}
.pagination {
    display: flex;
    justify-content: center;
    margin-top: 1rem;
}

.page-link {
    padding: 0.5rem 1rem;
    margin: 0 0.25rem;
    border: 1px solid #ddd;
    text-decoration: none;
    color: #333;
    border-radius: 4px;
    transition: background-color 0.3s ease;
}

.page-link.active {
    background-color: #088178;
    color: #fff;
}

.page-link:hover {
    background-color: #f0f0f0;
}
 </style>
<section class="content-main">
 <div class="content-header">
   <div>
     <h2 class="content-title card-title">Coupons</h2>
   </div>
 </div>
 <div class="card">
   <div class="card-body">
     <div class="row">
       <div class="col-md-3">
         <form method="post" action="/admin/createCoupon">
           <body onload="setDefaultStartDate()"></body>
             <div class="mb-4">
               <label for="coupon-name" class="form-label">Coupon Name</label>
               <input
                 type="text"
                 id="coupon-name"
                 name="couponName"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-coupon-name" class="error-message"></div>
             </div>


             <div>
               <label for="startingDate" class="form-label">Start Date</label>
               <input
                 type="date"
                 name="startDate"
                 class="form-control"
                 required="true"
                 id="startingDate"
               />
               <div id="error-start-date" class="error-message"></div>
             </div>


             <div>
               <label for="expiringDate" class="form-label">End Date</label>
               <input
                 type="date"
                 name="endDate"
                 class="form-control"
                 id="expiringDate"
                 required="true"
               />
               <div id="error-end-date" class="error-message"></div>
             </div>


             <div>
               <label for="offer-price" class="form-label">Offer Price</label>
               <input
                 type="text"
                 name="offerPrice"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-offer-price" class="error-message"></div>
             </div>


             <div>
               <label for="minimum-price" class="form-label"
                 >Minimum Price</label
               >
               <input
                 type="text"
                 name="minimumPrice"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-minimum-price" class="error-message"></div>
             </div>


             <div class="d-grid">
               <button
                 class="btn btn-primary mt-20"
                 onclick="return validateForm()"
                 type="submit"
               >
                 Add Coupon
               </button>
             </div>
             <div id="err-msg" class="error-message"></div>
           </body>
         </form>
       </div>
       <div class="col-md-7 ml-105">
         <div class="table-responsive">
             <table class="table table-hover">
                 <thead>
                     <tr>
                         <th>Name</th>
                         <th>Created On</th>
                         <th>Expire On</th>
                         <th>Offer Price</th>
                         <th>Minimum Price</th>
                         <th>Status</th>
                         <th>Edit/Delete</th>
                     </tr>
                 </thead>
                 <tbody>
                    <% for (let i = 0; i < coupons.length; i++) { %>
                     <tr>
                         <td class="text-start"><%= coupons[i].name %></td>
                         <td class="text-start"><%= new Date(coupons[i].createdOn).toLocaleDateString('en-GB') %></td>
                         <td class="text-start"><%= new Date(coupons[i].expireOn).toLocaleDateString('en-GB') %></td>
                         <td class="text-start"><%= coupons[i].offerPrice %></td>
                         <td class="text-start"><%= coupons[i].minimumPrice %></td>
                         <td class="text-start">
                          <% if (new Date(coupons[i].expireOn) > new Date()) { %>
                            <span class="badge badge-success">Active</span>
                          <% } else { %>
                            <span class="badge badge-danger">Expired</span>
                          <% } %>
                        </td>
                         <td class="text-start">
                             <a href="/admin/editCoupon/?id=<%= coupons[i]._id %>" class="btn btn-primary btn-sm" >Edit</a>


                                    <a href="#" onclick="confirmDelete('<%= coupons[i]._id %>')" class="btn btn-danger btn-sm" style="height: 35px;width: 105px;">Delete</a>
                         </td>
                     </tr>
                     <% } %>
                 </tbody>
             </table>
         </div>
     </div>
     </div>
   </div>
 </div>

 <div class="pagination">
  <% for (let i = 1; i <= totalPages; i++) { %>
    <a href="?page=<%= i %>" class="page-link <%= currentPage === i ? 'active' : '' %>"><%= i %></a>
  <% } %>
  <a href="?page=<%= currentPage + 1 %>" class="page-link">Next</a>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
function validateForm() {
    $.ajax({
        url: "/admin/createCoupon",
        method: "POST",
        data: {
            couponName: $("input[name='couponName']").val(),
            startDate: $("input[name='startDate']").val(),
            endDate: $("input[name='endDate']").val(),
            offerPrice: $("input[name='offerPrice']").val(),
            minimumPrice: $("input[name='minimumPrice']").val()
        },
        success: function(response) {
            if (response.success) {
                window.location.href = "/admin/coupon";
            }
        },
        error: function(xhr) {
            // Clear previous error messages
            $(".error-message").text("");

            // Check if validation errors exist
            if (xhr.responseJSON && xhr.responseJSON.errors) {
                const errors = xhr.responseJSON.errors;

                // Map backend errors to frontend error elements
                if (errors.couponName) 
                    $("#error-coupon-name").text(errors.couponName);
                
                if (errors.startDate) 
                    $("#error-start-date").text(errors.startDate);
                
                if (errors.endDate) 
                    $("#error-end-date").text(errors.endDate);
                
                if (errors.offerPrice) 
                    $("#error-offer-price").text(errors.offerPrice);
                
                if (errors.minimumPrice) 
                    $("#error-minimum-price").text(errors.minimumPrice);
            }
        }
    });
    return false; // Prevent default form submission
}

function updateCoupon(couponId) {
    const formData = {
        couponId: couponId,
        couponName: document.getElementsByName("couponName")[0].value,
        startDate: document.getElementsByName("startDate")[0].value,
        endDate: document.getElementsByName("endDate")[0].value,
        offerPrice: document.getElementsByName("offerPrice")[0].value,
        minimumPrice: document.getElementsByName("minimumPrice")[0].value
    };

    $.ajax({
        url: "/admin/updateCoupon",
        method: "POST",
        data: formData,
        success: function(response) {
            if (response.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: response.message,
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = "/admin/coupon";
                });
            } else {
                // Display validation errors
                const errors = response.errors;
                Object.keys(errors).forEach(key => {
                    const errorElement = document.getElementById(`error-${key.toLowerCase()}`);
                    if (errorElement) {
                        errorElement.innerHTML = errors[key];
                    }
                });
            }
        },
        error: function(xhr) {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: xhr.responseJSON?.message || 'An error occurred'
            });
        }
    });

    return false;
}

function confirmDelete(couponId) {
    if (!couponId) {
        console.error('No coupon ID provided');
        return;
    }

    Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
    }).then((result) => {
        if (result.isConfirmed) {
            deleteCoupon(couponId);
        }
    });
}

function deleteCoupon(couponId) {
    $.ajax({
        url: "/admin/deleteCoupon",
        method: "POST",
        data: { id: couponId },
        success: function(response) {
            if (response.success) {
                Swal.fire({
                    icon: "success",
                    title: "Deleted!",
                    text: response.message,
                    confirmButtonText: "OK"
                }).then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: response.message || "Failed to delete the coupon"
                });
            }
        },
        error: function(xhr) {
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: xhr.responseJSON?.message || "Failed to delete the coupon"
            });
        }
    });
}

function setDefaultStartDate() {
    const today = new Date();
    const dd = String(today.getDate()).padStart(2, "0");
    const mm = String(today.getMonth() + 1).padStart(2, "0");
    const yyyy = today.getFullYear();
    const todayStr = yyyy + "-" + mm + "-" + dd;
    document.getElementsByName("startDate")[0].value = todayStr;
}
</script>
<%- include("../../views/partials/admin/footer") %>
