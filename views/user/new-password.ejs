<%- include("../../views/partials/user/header") %>
<style>
    .password-form-container {
        background: white;
        padding: 40px;
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        width: 100%;
        max-width: 450px;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }

    .password-form-container h2 {
        color: #2d3748;
        margin-bottom: 30px;
        font-size: 24px;
        font-weight: 600;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .password-form-container label {
        display: block;
        margin-bottom: 8px;
        color: #4a5568;
        font-weight: 500;
        font-size: 14px;
    }

    .password-form-container input {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #e2e8f0;
        border-radius: 25px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .password-form-container input::placeholder {
        color: #a0aec0;
    }

    .password-form-container input:focus {
        outline: none;
        border-color: #667eea;
    }

    .password-form-container button {
        width: 100%;
        padding: 14px;
        background: rgba(5, 96, 43, 0.5);
        color: white;
        border: none;
        border-radius: 25px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: transform 0.2s ease;
        margin-top: 10px;
    }

    .password-form-container button:hover {
        opacity: 0.95;
    }

    .error-message {
        color: #f56565;
        font-size: 13px;
        margin-top: 6px;
        display: none;
        padding-left: 16px;
    }
</style>
</head>
<body>
<div class="password-form-container">
    <h2>Create New Password</h2>
    <form id="passwordForm" action="/create-password" method="post" onsubmit="return validateForm(event)">
       
    
        <div class="form-group">
            <label for="newPassword">New Password</label>
            <input 
                type="password" 
                id="newPassword"
                name="newPassword" 
                placeholder="Enter your new password"
            >
            <div class="error-message" id="passwordError"></div>
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input 
                type="password" 
                id="confirmPassword" 
                name="confirmPassword"
                placeholder="Confirm your password"
            >
            <div class="error-message" id="matchError">Passwords do not match</div>
        </div>

        <button type="submit">Create Password</button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

document.querySelector('form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // Only proceed if validation passes
    if (!validateForm(e)) {
        return;
    }
    
    const newPassword = document.querySelector('[name="newPassword"]').value;
    const confirmPassword = document.querySelector('[name="confirmPassword"]').value;
    
    // Show loading state
    Swal.fire({
        title: 'Updating Password',
        text: 'Please wait...',
        allowOutsideClick: false,
        showConfirmButton: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });
    
    try {
        const response = await fetch('/create-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                newPassword,
                confirmPassword
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            await Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Password updated successfully',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Continue to Login'
            });
            window.location.href = '/login';
        } else {
            await Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.message || 'Error updating password',
                confirmButtonColor: '#3085d6'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        await Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Something went wrong! Please try again.',
            confirmButtonColor: '#3085d6'
        });
    }
});

function validateForm(event) {
    const password = document.getElementById('newPassword').value;
    const confirm = document.getElementById('confirmPassword').value;
    const passwordError = document.getElementById('passwordError');
    const matchError = document.getElementById('matchError');
    
    // Reset error messages
    passwordError.style.display = 'none';
    matchError.style.display = 'none';
    
    // Password requirements
    const hasLetters = /[a-zA-Z]/.test(password);
    const hasNumbers = /[0-9]/.test(password);
    const isLongEnough = password.length >= 8;
    let isValid = true;

    if (!isLongEnough || !hasLetters || !hasNumbers) {
        passwordError.textContent = 'Password must be at least 8 characters and include both letters and numbers';
        passwordError.style.display = 'block';
        isValid = false;
    }

    if (password !== confirm) {
        matchError.textContent = 'Passwords do not match';
        matchError.style.display = 'block';
        isValid = false;
    }

    return isValid;
}



</script>

<!-- <script>

document.querySelector('form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const newPassword = document.querySelector('[name="newPassword"]').value;
    const confirmPassword = document.querySelector('[name="confirmPassword"]').value;
    
    fetch('/create-password', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            newPassword,
            confirmPassword
        })
    })
    .then(response => response.json())
    .then(data => {
        if(data.success) {
            window.location.href = '/login';
        } else {
            alert(data.message || 'Error updating password');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error updating password');
    });
});


// ...................................................
    function validateForm(event) {
        event.preventDefault();
        const password = document.getElementById('newPassword').value;
        const confirm = document.getElementById('confirmPassword').value;
        const passwordError = document.getElementById('passwordError');
        const matchError = document.getElementById('matchError');
        
        // Reset error messages
        passwordError.style.display = 'none';
        matchError.style.display = 'none';

        // Check password requirements
        const hasLetters = /[a-zA-Z]/.test(password);
        const hasNumbers = /[0-9]/.test(password);
        const isLongEnough = password.length >= 8;

        if (!isLongEnough || !hasLetters || !hasNumbers) {
            passwordError.textContent = 'Password must be at least 8 characters and include both letters and numbers';
            passwordError.style.display = 'block';
            return false;
        }

        if (password !== confirm) {
            matchError.style.display = 'block';
            return false;
        }

        // alert('Password successfully created!');
        return true;
    }
</script> -->