<%- include("../../views/partials/user/header", { user: user }) %>

<body>
    <!--=============== MAIN ===============-->
    <main class="main">
      <!--=============== BREADCRUMB ===============-->
      <section class="breadcrumb" style="width: 100%; height: 80px; display: flex; margin-top: -40px; justify-content: center; align-items: center; background-color: #ffff;" >
        <ul class="breadcrumb__list  container" style=" margin-left: -25px;">
          <li><a href="/" class="breadcrumb__link" style="font-size: 12px ;">Home</a></li>
          <li><span class="breadcrumb__link">></span></li>
          <li><a href="/shop" class="breadcrumb__link" style="font-size: 12px ;">Shop</a></li>
          <li><span class="breadcrumb__link">></span></li>
          <li><a href="/cart" class="breadcrumb__link" style="font-size: 12px ;">Cart</a></li>
        </ul>
      </section>

      <!--=============== CART ===============-->
      <section class="cart ">
        <% if (cartItems && cartItems.length > 0) { %>
        <div class="table__container">
          <table class="table">
            <thead>
              <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Subtotal</th>
                <th>Remove</th>
              </tr>
            </thead>
            <tbody>
              <% let total = 0 %>
              <% cartItems.forEach(item => { %>
                <% total += item.subtotal %>
              <tr data-product-id="<%= item.product._id %>">
                <td>
                  <img
                    src="/admin-assets/imgs/brands/<%= item.product.productImage[0] %>"
                    alt="Product Image"
                    class="table__img"
                    style="max-width: 100px; max-height: 100px;"
                    onerror="console.error('Image not found:', this.src);"
                  />
                </td>
                <td>
                  <h3 class="table__title">
                    <%= item.product.productName %>
                  </h3>
                </td>
                <td>
                  <span class="table__price"><%= item.product.salePrice || item.product.regularPrice %></span>
                </td>
                <td>
                  <div class="quantity-container">
                    <button class="quantity-btn decrement" data-product-id="<%= item.product._id %>">-</button>
                    <input type="number" value="<%= item.quantity %>" min="1" max="<%= Math.min(item.product.quantity, 5) %>" class="quantity" data-product-id="<%= item.product._id %>" data-available-stock="<%= item.product.quantity %>" readonly />
                    <button class="quantity-btn increment" data-product-id="<%= item.product._id %>">+</button>
                  </div>
                  <div class="max-quantity-message" style="display: none; color: rgb(125, 71, 71); font-size: 12px;">Maximum quantity reached</div>
                  <div class="out-of-stock-message" style="display: none; color: rgb(125, 71, 71); font-size: 12px;">Maximum quantity reached <p>"Out of stock"</p></div>
                </td>
                <td><span class="subtotal"><%= item.subtotal.toFixed(2) %></span></td>
                <td><i class="fi fi-rs-trash table__trash" onclick="removeItem('<%= item.product._id %>')" ></i></td>
              </tr>
            <% }) %>
            </tbody>
          </table>
        </div>

        <div class="cart__actions" style="margin-left: -20px; margin-right: 70px; margin-top: -100px; ">
          <a href="/shop" class="btn flex btn__md">
            <i class="fi-rs-shopping-bag"></i> Continue Shopping
          </a>
        </div>


          <div class="cart__total" style="margin: 250px; margin-top: 40px; margin-bottom: 20px;">
            <h3 class="section__title">Cart Totals</h3>
            <table class="cart__total-table">
                <tr>
                  <td><span class="cart__total-title">Cart Subtotal</span></td>
                  <td><span class="cart__total-price"><%= total.toFixed(2) %></span></td>
                </tr>
                <tr>
                  <td><span class="cart__total-title">Shipping</span></td>
                  <td><span class="cart__total-price">₹49.00</span></td>
                </tr>
                <tr>
                  <td><span class="cart__total-title">Total</span></td>
                  <td><span class="cart__total-price">₹<%= (total + 49).toFixed(2) %></span></td>
                </tr>
            </table>
            <div class="empty-cart">
            <a href="/checkout" class="btn flex btn--md" onclick="proceedToCheckout(event)" style="display: flex; align-items: center; background-color: #2b5741; color: white; padding: 12px 20px; border-radius: 6px; text-decoration: none; line-height: 1;">
              <i class="fi fi-rs-box-alt"></i> Proceed To Checkout
            </a>
          </div>
          </div>
        
          <% } else { %>
            <div class="empty-cart" style="text-align: center; display: flex; flex-direction: column; align-items: center; padding: 40px 20px;">
              <h2 style="font-size: 24px; color: #333; margin: 0 0 10px 0;">Your cart is empty</h2>
              <p style="color: #666; margin: 0 0 30px 0;">Looks like you haven't added anything to your cart yet.</p>
              <a href="/shop" class="btn flex btn__md" style="display: flex; align-items: center; background-color: #2b5741; color: white; padding: 12px 20px; border-radius: 6px; text-decoration: none; line-height: 1;">
                <i class="fi-rs-shopping-bag" style="margin-right: 8px;"></i> Continue Shopping
              </a>
            </div>
          <% } %>
        
        </section>

    </main>

    <!-- for notifications -->
    <div id="notification-container" class="notification-container"></div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      async function updateQuantity(productId, action) {
        try {
          const response = await fetch('/update-cart', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              productId,
              action
            })
          });
      
          const data = await response.json();
          
          if (!data.success) {
            throw new Error(data.message || 'Could not update quantity');
          }
      
          const row = document.querySelector(`tr[data-product-id="${productId}"]`);
          const quantityElement = row.querySelector('.quantity');
          const subtotalElement = row.querySelector('.subtotal');
          const price = parseFloat(row.querySelector('.table__price').textContent);
          
          // Update quantity and subtotal
          quantityElement.value = data.availableQuantity;
          subtotalElement.textContent = (price * data.availableQuantity).toFixed(2);
      
          // Update cart totals
          let total = 0;
          document.querySelectorAll('.subtotal').forEach(el => {
            total += parseFloat(el.textContent);
          });
          
          const shipping = 49; // Fixed shipping cost
          const cartTotalElement = document.querySelector('.cart__total-price');
          cartTotalElement.textContent = `₹${(total + shipping).toFixed(2)}`;
      
          // Manage button states
          const incrementBtn = row.querySelector('.increment');
          const decrementBtn = row.querySelector('.decrement');
          
          incrementBtn.disabled = data.availableQuantity >= 5 || data.availableQuantity >= data.availableStock;
          decrementBtn.disabled = data.availableQuantity <= 1;
      
          // Show/hide max quantity message
          const maxQuantityMessage = row.querySelector('.max-quantity-message');
          maxQuantityMessage.style.display = data.availableQuantity >= 5 ? 'block' : 'none';
      
          // Show/hide out of stock message
          const outOfStockMessage = row.querySelector('.out-of-stock-message');
          outOfStockMessage.style.display = data.availableStock <= 5 && data.availableQuantity >= data.availableStock ? 'block' : 'none';
      
        } catch (error) {
          console.error('Quantity update error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to update quantity'
          });
        }
      }
      
      async function removeItem(productId) {
        const result = await Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, remove it!'
        });
      
        if (result.isConfirmed) {
          try {
            const response = await fetch(`/removeFrom-cart/${productId}`, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              }
            });
      
            if (!response.ok) throw new Error('Remove failed');
            
            location.reload();
          } catch (error) {
            console.error('Error removing item:', error);
            Swal.fire('Failed to remove item. Please try again.');
          }
        }
      }
      
      function proceedToCheckout(event) {
        event.preventDefault();
        window.location.href = '/checkout';
      }
      
      document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.increment').forEach(button => {
          button.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            updateQuantity(productId, 'increase');
          });
        });
      
        document.querySelectorAll('.decrement').forEach(button => {
          button.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            updateQuantity(productId, 'decrease');
          });
        });
      });
      </script>

    <style>
      .quantity-container {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .quantity-btn {
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        padding: 5px 10px;
        cursor: pointer;
      }
      .quantity-btn:disabled {
        background-color: #e0e0e0;
        cursor: not-allowed;
      }
      .quantity {
        width: 50px;
        text-align: center;
        border: 1px solid #ccc;
        margin: 0 5px;
      }
      .max-quantity-message {
        display: none;
        color: red;
        font-size: 12px;
      }
      .out-of-stock-message {
        display: none;
        color: red;
        font-size: 12px;
      }
      .notification-container {
        position: fixed;
        top: 1rem;
        right: 1rem;
        z-index: 1000;
      }
      .notification {
        background-color: #f8d7da;
        color: #721c24;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 1rem;
        animation: slideIn 0.3s ease-out;
      }
      @keyframes slideIn {
        from {
          transform: translateX(100%);
          opacity: 0;
        }
        to {
          transform: translateX(0);
          opacity: 1;
        }
      }
      .table__container {
        overflow-x: auto;
      }
      .table {
        width: 100%;
        border-collapse: collapse;
      }
      .table th, .table td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #ddd;
      }
      .table__img {
        max-width: 100px;
        max-height: 100px;
      }
      .table__title {
        font-size: 16px;
        font-weight: 500;
      }
      .table__price, .subtotal {
        font-size: 14px;
        font-weight: 500;
      }
      .table__trash {
        cursor: pointer;
        color: #dc2626;
      }
      .cart__actions {
        margin-top: 20px;
      }
      .cart__total {
        margin-top: 20px;
      }
      .cart__total-table {
        width: 100%;
        border-collapse: collapse;
      }
      .cart__total-table td {
        padding: 10px;
        border-bottom: 1px solid #ddd;
      }
      .cart__total-title {
        font-size: 16px;
        font-weight: 500;
      }
      .cart__total-price {
        font-size: 16px;
        font-weight: 500;
      }
      .empty-cart {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 40px 20px;
      }
      .empty-cart h2 {
        font-size: 24px;
        color: #333;
        margin: 0 0 10px 0;
      }
      .empty-cart p {
        color: #666;
        margin: 0 0 30px 0;
      }
      .empty-cart .btn {
        display: flex;
        align-items: center;
        background-color: #2b5741;
        color: white;
        padding: 12px 20px;
        border-radius: 6px;
        text-decoration: none;
        line-height: 1;
      }
      .empty-cart .btn i {
        margin-right: 8px;
      }
    </style>
</body>

<%- include("../../views/partials/user/footer") %>